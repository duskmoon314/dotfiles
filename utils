#!/bin/bash

# Execute as root
as_root() {
  local shell_cmd
  local cmd
  local user
  cmd=("$@")
  shell_cmd='bash -c'
  user="$(whoami)"

  if [ "$user" != 'root' ]; then
    # shell_cmd='sudo -E bash -c'
    if command_exists sudo; then
      shell_cmd='sudo -E bash -c'
    elif command_exists su; then
      shell_cmd='su -c'
    else
      echo "[ERROR] Needs root. No sudo or su found"
      exit 1
    fi
  fi
  printf -v cmd_str "%q " "${cmd[@]}"
  $shell_cmd "$cmd_str"
}

try_nonroot_first() {
  local cmd
  cmd=("$@")
  printf -v cmd_str '%q ' "${cmd[@]}"
  bash -c "$cmd_str" || as_root "$cmd_str"
}

# Test whether a command exists
command_exists() {
  command -v "$@" >/dev/null 2>&1
}

# Install apps
install_app() {
  if command_exists brew; then
    # Use brew on macOS
    brew install "$@"
  elif grep -q 'Debian\|Ubuntu' /etc/os-release; then
    # Use apt on Debian/Ubuntu
    # MacOS seems to have apt but it's not the same
    as_root apt update -qq
    as_root apt install -qq -y --no-install-recommends "$@"
  else
    echo "[ERROR] Unknown package manager"
    return 1
  fi
}

# Set env to ._shrc
set_env_to_shrc() {
  local env_name
  local env_value
  env_name="$1"
  env_value="$2"

  # Get shrc of default shell
  local shrc
  shrc="$HOME/.$(basename "$SHELL")rc"

  # Append to shrc if not exists
  grep -q -F "export $env_name=$env_value" "$shrc" ||
    echo "export $env_name=$env_value" >>"$shrc"
}

# Set alias to ._shrc
set_alias_to_shrc() {
  local alias_name
  local alias_value
  alias_name="$1"
  alias_value="$2"

  # Get shrc of default shell
  local shrc
  shrc="$HOME/.$(basename "$SHELL")rc"

  # Append to shrc if not exists
  grep -q -F "alias $alias_name=\"$alias_value\"" "$shrc" ||
    echo "alias $alias_name=\"$alias_value\"" >>"$shrc"
}
